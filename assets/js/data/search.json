[ { "title": "Sự khác nhau giữa tham số và đối số (parameter và argument)", "url": "/posts/su-khac-nhau-parameter-va-argument/", "categories": "Tech", "tags": "post, vietnamese", "date": "2022-03-20 15:51:00 +0700", "snippet": "Khi nói về các phương thức bằng lời nói, tôi không bao giờ chắc chắn có nên sử dụng từ đối số hoặc tham số hay thứ gì khác. Tôi đọc nhiều tài liệu đôi khi tôi cũng nhầm lẫn về những từ ngữ này. Dù bằng cách nào thì người khác cũng biết ý của tôi, nhưng tôi muốn biết chính xác cách sử dụng của các thuật ngữ. parameter : tham số argument : đối sốTham số là một biến trong định nghĩa phương thức.Khi một phương thức được gọi, các đối số là dữ liệu bạn truyền vào các tham số của phương thức.Ví dụ: public void MyMethod(string myParam) { } // myPatam được gọi là tham số ... string myArg1 = \"this is my argument\"; myClass.MyMethod(myArg1); // myArg1 được gọi là đối số" }, { "title": "Từ vựng tiếng Nhật chuyên ngành IT", "url": "/posts/tu-vung-tieng-nhat-it/", "categories": "Japanese", "tags": "post, japanese", "date": "2022-03-11 23:27:00 +0700", "snippet": "-　反映 （はんえい） : Ánh xạ, thể hiện (trên bản vẽ)… オンライン上に反映：deploy, update lên, đẩy dữ liệu.-　仕様書（しようしょ）：　specification, tài liệu đặc tả kĩ thuật-　取得する（しゅとく）：　get-　引数（ひきすう）：　argument (đối số)" }, { "title": "Nhờ vả và cám ơn trong tiếng Nhật", "url": "/posts/nho-va-va-cam-on-trong-tieng-nhat/", "categories": "Japanese", "tags": "post, vietnamese", "date": "2022-03-10 11:43:00 +0700", "snippet": "Mẫu câu nhờ vả và yêu cầu cơ bản.お願いしたいことがあるのですが、ここに書いていただけますか？(Tôi có việc muốn nhờ anh. Tôi có thể viết ở đây không?).すみませんちょっと困っていることがあるんですがBạn chỉ cần nói mơ hồ như trên thôi và không cần nói thẳng ra thì người Nhật cũng tự hiểu và chủ động giúp bạn ngay lập tức.手伝ってくれる／手伝ってくれますかVて＋いただけますかĐây là cách nói lịch sự trong giao tiếp khi bạn muốn nhờ ai đó làm gì「～てもらいたい・～ていただきたい・～てほしい」Ý nghĩa : (tôi)~ muốn được…Cách dùng: Dùng khi muốn nhờ vả, yêu cầu đối phương làm gì đó cho mình ( một việc rõ ràng). Chú ý phân biệt mẫu câu này với ngữ pháp 「～たい」( tự bản thân mình muốn làm gì đó).Đây cũng là cách nói mà người Nhật hay dùng để nhờ vả, mong nhận được sự giúp đỡ từ người khácVí dụ: 手伝ってもらいたいです この書類、ちょっと見ていただきたいんですが、今よろしいでしょうか。Không biết bây giờ anh có thể dành một chút thời gian xem qua tập tài liệu này giúp tôi được không? この仕事はだれにも手伝ってもらいたくない。自分一人でやりたい。Tôi không muốn có ai giúp công việc này đâu. Tôi muốn tự làm một mình. ずっと僕のそばにいてほしい。遠くへ行かないでほしい。Mình chẳng muốn đi đâu cả, lúc nào cũng chỉ mong được ở bên cạnh cậu thôi!「～（さ）せてもらいたい・～（さ）せていただきたい・（さ）せてほしい」Ý nghĩa :　~Muốn( được cho phép làm gì, không phải làm gì)…Cách dùng: Dùng để bày tỏ nguyện vọng, mong muốn được người khác sắp xếp, cho phép mình được làm gì đó.Ví dụ: すみません、今日は体調が悪いので、早く帰らせていただきたいのですが・・・Xin lỗi, hôm nay tôi cảm thấy trong người không khỏe nên muốn xin về sớm một chút có được không ạ?Mẫu câu cảm ơn.ありがとうどうも“どうも” ngắn gọn, dễ sử dụng hơn và mang sắc thái lịch sự, trang trọng hơn so với “ありがとう”.Không thể dùng để nói với người trênどうもありがとうĐây là cách nói cám chuẩn mực nhất. Tuy nhiên, nó cũng không được dùng với những người trên mà chỉ có thể với bạn bè, đồng nghiệp mà thôi. Vì thế, nhớ rằng đừng nên dùng “どうもありがとう” trong các tình huống trang trọng.ありがとうございますどうもありがとうございますĐây là hình thức cám ơn nhấn mạnh của “ありがとうございます”. Nó nhấn mạnh hơn về tính trang trọng và trịnh trọng với người có địa vị cao hơn bạn và động thời cũng nhấn mạnh độ chân thành với người quen.どうもありがとうございましたCách nói cám ơn này ở dạng quá khứ bởi lẽ nó được dùng để cám ơn ai đó gần đây đã giúp đỡ bạn.ほんとにかんしゃします。Tôi thật sự biết ơn anhいつもおせわになってどうもありがとうございます。Cảm ơn vì luôn quan tâm chăm sóc tôi." }, { "title": "NoSQL", "url": "/posts/nosql/", "categories": "Tech", "tags": "post, vietnamese", "date": "2022-03-09 23:08:00 +0700", "snippet": "NoSQL là gìNoSQL có nghĩa là Non-Relational (Không có mối quan hệ). Nhưng hiện nay người ta thường dịch là Not Only SQL. Không sử dụng mô hình dữ liệu quan hệ thông thường (RDBMs). Đặc biệt nhấn mạnh đến mô hình lưu trữ. Nó không lưu trữ theo dạng thông thường mà lưu trữ theo dạng {“key”:”value”}. Điều này rất giống với JSON,..Ngoài ra Hệ thống NoSQL sử dụng dữ liệu phân tán. Có nghĩa là nó sẽ lưu trữ trên nhiều server khác nhau. Dữ liệu ở đây không chỉ là những gì chúng ta nhập vào, mà có thể là file, hay video,… rất là nhiều thứ được gọi chung là dữ liệu. Đây là hệ thống phân tán dữ liệu.NoSQL là: hệ cơ sở dữ liệu không rành buộc, phân tán, mã nguồn mở, khả năng mở rộng theo chiều ngang, có thể chứa hàng petabytes, độ chịu tải và chịu lỗi cao, yêu cầu tài nguyên phần cứng thấp. Trong phần này chúng ta thấy một số khái niệm khá mơ hồ, như khả năng mở rộng theo chiều ngang là gì? độ chịu tải và chịu lỗi cao?…Độ chịu tải caoVí dụ như có 1000 người truy cập vào server, nếu như server đó không đủ mạnh thì server đó không chịu tải nổi. Nhưng đối với NoSQL là một hệ csdl phân tán, vì vậy nó không nằm tập trung trên một server mà có có thể nằm trên nhiều server khác nhau. Lúc này hệ thống của chúng ta sẽ có một cái server, server này sẽ hỗ trợ chúng ta chia tải. Ví dụ 1000 ngàn người vào, có 6 cái server, thì mỗi server sẽ được hơn 100 người. Lúc đó sẽ không gặp trường hợp ngẽn mạch nữa, hoặc làm cho ứng dụng của bạn chạy không nổi. Vì vậy, nếu chúng ta có một project liên quan đến bài toán số lượng người truy cập, cũng như dữ liệu lớn thì hãy nghĩ đến ngay đến hệ thống lưu trữ phân tán nhé.Chịu lỗi cao.Các bạn biết đó, hệ thống lưu trữ phân tán sẽ chứa dữ liệu ở nhiều nơi, và trong thời gian lưu trữ đó, nó sẽ đồng bộ các dữ liệu ở trên các nơi đó. Vậy thì nếu trong trường hợp một server nào đó chết thì nó sẽ không ảnh hưởng đến ứng dụng của chúng ta.Tài nguyên thấpNghĩa là lúc này chúng ta không cần một cái server quá mạnh. Ví dụ như chúng ta có 6 cái server, các server không cần phải có cấu hình giống nhau, có erver mạng có server yếu, thì lúc đó nếu server mạnh thì chúng ta cho nhiều người vào, server yếu thì cho ít người lại. Lúc đó tốc độ truy cập sẽ ổn định và đồng đều với nhau.Vậy là chúng ta đã hiểu cơ bản NoSQL là gì. Nếu muốn tìm hiểu nhiều hơn thì lên search các tài liệu trên mạng nhé." }, { "title": "📝Note link", "url": "/posts/note-link/", "categories": "Note", "tags": "post, note", "date": "2022-03-09 23:01:00 +0700", "snippet": " Mình tổng hợp một số thuật ngữ mà mình vô tình được nghe được thấy trên mạng, từ bạn.Language: Vietnamese NoSQL là gì? (Bài 1.2) Git fetch là gì? Phân biệt git fetch và git pull.) BEM là gì? Quy ước đặt tên dành cho CSS Hướng dẫn và ví dụ Javascript XMLHttpRequestLanguage: English Google Analytics setup for JekyllLanguage: Japanese エンジニアが実際どんな風に仕事してるかお見せします (字幕がある) [VN+JP] Luyện đọc N2 có dịch, chỉ ra từ vựng và ngữ pháp" }, { "title": "Viết Markdown qua WYSIWYG editor:✏️Stackedit", "url": "/posts/viet-markdown-qua-WYSIWYG-editor-Stackedit/", "categories": "Tools/Tips", "tags": "post, markdown, vietnamese", "date": "2022-03-08 15:49:00 +0700", "snippet": "Mình giới thiệu các bạn một trang web cho phép chúng ta viết markdown để tạo bài viết. Trang các bạn đang xem đây, thật ra muốn tạo bài viết cũng phải viết markdown sau đó nó tự render ra HTML. Mình thì không phải là chuyên gia, và hay viết Markdown. Vì vậy mình đã tra trên google và tìm ra một trang web soạn thảo khá tiện: StackeditĐiều tiện lợi ở đây các bạn sẽ có thể viết các cú pháp Markdown đồng thời sử dụng WYSIWYS để edit.Như hình một bên sẽ cho bạn soạn thảo bằng các cú pháp Markdown. Ở trên sẽ có các công cụ hỗ trợ cho việc viết như In đậm, In nghiên, Cỡ chữ, Thêm ảnh,… Đây chỉ là ví dụ của mình, mình đoán là có rất nhiều trang web, công cụ khác, các bạn có thể tìm nha hihi.Thank you." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Note", "tags": "helloworld, post", "date": "2022-03-06 14:50:00 +0700", "snippet": "HelloI don’t know what I’m going to write after." } ]
